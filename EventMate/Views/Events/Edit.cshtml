@model EventMate.Models.events

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@* enctype = multipart/formdata enables POSTing BLOB data from a file input control *@
@using (Html.BeginForm("Edit", "Events", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>events</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.location, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.location, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.location, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DescriptionDummy, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.DescriptionDummy, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DescriptionDummy, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.dateandtime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.dateandtime, new { @type = "text", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.dateandtime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EventPictureFile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.EventPictureFile, new { @type = "file", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EventPictureFile, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-10">
            <img src="@Model.eventpictureurl" style="max-width: 100%;" />
        </div>
    </div>

    @Html.HiddenFor(model => model.eventpictureurl)

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@Styles.Render("~/Content/datetimepicker")
@Styles.Render("~/Content/quill")

@section Scripts {
    @Scripts.Render("~/bundles/quill")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/datetimepicker")
    @Scripts.Render("~/bundles/events-edit")
}
